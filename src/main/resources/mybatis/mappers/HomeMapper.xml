<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hoge.mapper.HomeMapper">
	
	<select id="getNewSixAccommoMainImages" resultType="com.hoge.dto.AccMainDto">
	 	select host_no as hostNo, 
	 		   host_main_image as mainImage,
	 		   accommo_no as accNo,
	 		   accommo_name as accName, 
	 		   accommo_intro_title as accIntroTitle
		from (select hosts.host_no, 
					 hosts.host_main_image,
					 accommos.accommo_no, 
					 accommos.accommo_name, 
					 accommos.accommo_intro_title
        	  from tb_final_hosts hosts, tb_final_accommodations accommos
        	  where hosts.host_no = accommos.host_no
        	  and hosts.hosting_type = 1
       		  and hosts.status = 'Y'
        	  and hosts.host_main_image is not null
        	  order by hosts.host_no desc)
		where rownum &lt;= 6
	 </select>
	 
	 <select id="getAccMainImage" resultType="com.hoge.vo.accommo.AccommoImage" parameterType="int">
		select h.host_main_image as image
  		from tb_final_discount_promotions p, tb_final_hosts h
  		where  p.host_no = h.host_no
  		and p.discount_promotion_no = #{value}
	</select>
	
	<select id="getMinMaxByHostNo" resultType="com.hoge.dto.HomeAccommoDto" parameterType="int">
		select  
			a.host_no as hostNo, 
            min(r.weekdays_price) as minPrice,
			max(r.peak_season_price) as maxPrice,
            min(r.standard_number) as minNumber,
			max(r.maximum_number) as maxNumber
		from
            tb_final_accommodations a,
            tb_final_rooms r
		where 
			a.accommo_no = r.accommo_no
        and 
        	a.host_no = #{value}
		group by 
			a.host_no
	</select>
	
	<select id="getAllAccommodation" resultType="com.hoge.dto.HomeAccommoDto">
		<!-- select rn, accommoNo, hostNo, accommoType, accommoName, 
			   regionDepth1,regionDepth2,
			   minWeekdaysPrice,maxPeakSeasonPrice,minNumber,maxNumber
		from
			( -->
		select
	   		row_number() over (order by a.accommo_no) rn,
			a.accommo_no as accommoNo, 
			a.host_no as hostNo, 
			a.accommo_type as accommoType, 
			a.accommo_name as accommoName, 
			a.accommo_region_depth1 as regionDepth1, 
			a.accommo_region_depth2 as regionDepth2,
	        h.status as status,
	        min(r.weekdays_price) as minWeekdaysPrice,
			max(r.peak_season_price) as maxPeakSeasonPrice,
	        min(r.standard_number) as minNumber,
			max(r.maximum_number) as maxNumber
		from
	        tb_final_accommodations a,
	        tb_final_rooms r,
	        tb_final_hosts h
        where 
        	a.accommo_no = r.accommo_no
        and 
        	a.host_no = h.host_no
        and 
        	h.status = 'Y'
        group by 
           a.accommo_no, a.host_no, a.accommo_type, a.accommo_name,a.accommo_region_depth1, a.accommo_region_depth2, h.status
		        <!-- )
		where rn between #{beginIndex} and #{endIndex} -->
	</select>
	
	
	
	<!-- 이승준 테스트용
		List<User> getAllUsers();
	
	 <select id="getAllUsers" resultType="com.hoge.vo.other.User">
	 	select
	 		user_no as no,
	 		user_id as id,
	 		user_is_host as isHost,
	 		user_name as name,
	 		user_pwd as pwd,
	 		user_email as email,
	 		user_tel as tel,
	 		user_registered_date as registeredDate,
	 		user_deleted as deleted,
	 		user_pnt as pnt,
	 		user_image as image,
	 		user_gender as gender,
	 		user_reported_count as reportedCount
	 	from
	 		tb_final_users
	 	order by
	 		user_no desc
	 </select>
	 
	<update id="updateUser" parameterType="com.hoge.vo.other.User">
		update 
			tb_final_users
		<set>
		 		user_is_host = #{isHost},
		 		user_name = #{name},
		 		user_pwd = #{pwd},
		 		user_email = #{email},
		 		user_tel = #{tel},
	 			user_deleted = #{deleted},
	 			user_pnt = #{pnt},
	 		<if test="image != null">
	 			user_image = #{image},
	 		</if>
	 			user_gender = #{gender},
	 			user_reported_count = #{reportedCount}
	 	</set>
		where
			user_no = #{no}
	</update>
	
	 <insert id="insertUserKaKao" parameterType="com.hoge.dto.KakaoUserDto">
		insert into tb_final_users
			(user_no, user_id, user_name, user_email, user_gender)
		values
			(final_user_no_seq.NEXTVAL, #{id}, #{name}, #{email}, #{gender})
	</insert>
	 -->
	
	
</mapper>