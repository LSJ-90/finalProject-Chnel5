<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hoge.mapper.ReviewMapper">
  
  
	
  
  <!-- 성하민
		int getAccommoReviewsTotalRows(Criteria criteria);
	 -->
	 <select id="getAccommoReviewsTotalRows" parameterType="com.hoge.form.Criteria" resultType="int">
		select count(*)
		from TB_FINAL_ACCOMMO_REVIEWS R, TB_FINAL_ACCOMMODATIONS A
		where R.ACCOMMO_NO = A.ACCOMMO_NO
			<if test="opt != null and value != null and opt != '' and value != ''">
				<choose>
					<when test="opt == '호스트번호'">
						and A.host_NO = #{value} 
					</when>
					<when test="opt == '시설번호'">
						and A.ACCOMMO_NO = #{value}
					</when>
					<when test="opt == '회원번호'">
						and R.USER_NO = #{value}
					</when>
					<when test="opt == '시설이름'">
						and A.ACCOMMO_NAME like '%' || #{value} || '%'
					</when>
					<when test="opt == '내용'">
						and R.REVIEW_CONTENT like '%' || #{value} || '%'
					</when>
				</choose>
			</if>
	</select>
  
  
  <!-- 성하민
		int getActivityReviewsTotalRows(Criteria criteria);
  
	 -->
	 <select id="getActivityReviewsTotalRows" parameterType="com.hoge.form.Criteria" resultType="int">
		select count(*)
		from TB_FINAL_ACTIVITY_REVIEWS R, TB_FINAL_ACTIVITIES A
		where R.ACTIVITY_NO = A.ACTIVITY_NO
			<if test="opt1 != null and value1 != null and opt1 != '' and value1 != ''">
				<choose>
					<when test="opt1 == '호스트번호'">
						and A.host_NO = #{value1} 
					</when>
					<when test="opt1 == '체험번호'">
						and A.ACTIVITY_NO = #{value1}
					</when>
					<when test="opt1 == '회원번호'">
						and R.USER_NO = #{value1}
					</when>
					<when test="opt1 == '체험이름'">
						and A.ACTIVITY_NAME like '%' || #{value1} || '%'
					</when>
					<when test="opt1 == '내용'">
						and R.REVIEW_CONTENT like '%' || #{value1} || '%'
					</when>
				</choose>
			</if>
	</select>
  
   <!-- // 성하민
  List<AdminActivityReviewDto> getActivityReviewsByCriteria(Criteria criteria);
	 -->
	<select id="getActivityReviewsByCriteria" parameterType="com.hoge.form.Criteria" resultType="com.hoge.dto.AdminActivityReviewDto">
		select 	
			ACTIVITY_REVIEW_NO as no,
			USER_NO	as userNo,
			HOST_NO	as hostNo,
			
			ACTIVITY_NO as activityNo,
			ACTIVITY_NAME as activityName,
				
			REVIEW_STAR	as star,
			
			REVIEW_CONTENT as content,
			REVIEW_CREATED_DATE	as createdDate,
			REVIEW_DELETED as deleted,
			REVIEW_UPDATED_DATE	as updatedDate,
				
			REVIEW_ANSWERED	as answered,
			ANSWER_CONTENT as answerContent,
			ANSWER_DELETED as answerDeleted,
			ANSWER_CREATED_DATE as answerCreatedDate
		from (
			select 	
			R.ACTIVITY_REVIEW_NO,
			R.USER_NO,
			A.HOST_NO,
			
			R.ACTIVITY_NO,
			A.ACTIVITY_NAME,
				
			R.REVIEW_STAR,
				
			R.REVIEW_CONTENT,
			R.REVIEW_CREATED_DATE,
			R.REVIEW_DELETED,
			R.REVIEW_UPDATED_DATE,
				
			R.REVIEW_ANSWERED,
			R.ANSWER_CONTENT,
			R.ANSWER_DELETED,
			R.ANSWER_CREATED_DATE,
	 		row_number() over (order by R.REVIEW_CREATED_DATE desc) rn
		from TB_FINAL_ACTIVITY_REVIEWS R, TB_FINAL_ACTIVITIES A
		where R.ACTIVITY_NO = A.ACTIVITY_NO
			<if test="opt1 != null and value1 != null and opt1 != '' and value1 != ''">
				<choose>
					<when test="opt1 == '호스트번호'">
						and A.host_NO = #{value1} 
					</when>
					<when test="opt1 == '체험번호'">
						and A.ACTIVITY_NO = #{value1}
					</when>
					<when test="opt1 == '회원번호'">
						and R.USER_NO = #{value1}
					</when>
					<when test="opt1 == '체험이름'">
						and A.ACTIVITY_NAME like '%' || #{value1} || '%'
					</when>
					<when test="opt1 == '내용'">
						and R.REVIEW_CONTENT like '%' || #{value1} || '%'
					</when>
				</choose>
			</if>
		)
		where rn between #{beginIndex} and #{endIndex}
	</select> 
  
  <!-- // 성하민
  List<AdminAccommoReviewDto> getAccommoReviewsByCriteria(Criteria criteria);
		
	 -->
	<select id="getAccommoReviewsByCriteria" parameterType="com.hoge.form.Criteria" resultType="com.hoge.dto.AdminAccommoReviewDto">
		select 	
			ACCOMMO_REVIEW_NO as no,
			USER_NO	as userNo,
			HOST_NO	as hostNo,
			
			ACCOMMO_NO as accommoNo,
			ACCOMMO_NAME as accommoName,
				
			REVIEW_CLEANLINESS_STAR	as cleanlinessStar,
			REVIEW_COMMUNICATION_STAR as communicationStar,
			REVIEW_ACCURACY_STAR as accuracyStar,
			REVIEW_LOCATION_STAR as locationStar,
				
			REVIEW_CONTENT as content,
			REVIEW_CREATED_DATE	as createdDate,
			REVIEW_DELETED as deleted,
			REVIEW_UPDATED_DATE	as updatedDate,
				
			REVIEW_ANSWERED	as answered,
			ANSWER_CONTENT as answerContent,
			ANSWER_DELETED as answerDeleted,
			ANSWER_CREATED_DATE as answerCreatedDate
		from (
			select 	
			R.ACCOMMO_REVIEW_NO,
			R.USER_NO,
			A.HOST_NO,
			
			R.ACCOMMO_NO,
			A.ACCOMMO_NAME,
				
			R.REVIEW_CLEANLINESS_STAR,
			R.REVIEW_COMMUNICATION_STAR,
			R.REVIEW_ACCURACY_STAR,
			R.REVIEW_LOCATION_STAR,
				
			R.REVIEW_CONTENT,
			R.REVIEW_CREATED_DATE,
			R.REVIEW_DELETED,
			R.REVIEW_UPDATED_DATE,
				
			R.REVIEW_ANSWERED,
			R.ANSWER_CONTENT,
			R.ANSWER_DELETED,
			R.ANSWER_CREATED_DATE,
	 		row_number() over (order by R.REVIEW_CREATED_DATE desc) rn
		from TB_FINAL_ACCOMMO_REVIEWS R, TB_FINAL_ACCOMMODATIONS A
		where R.ACCOMMO_NO = A.ACCOMMO_NO
			<if test="opt != null and value != null and opt != '' and value != ''">
				<choose>
					<when test="opt == '호스트번호'">
						and A.host_NO = #{value} 
					</when>
					<when test="opt == '회원번호'">
						and R.USER_NO = #{value}
					</when>
					<when test="opt == '시설번호'">
						and A.ACCOMMO_NO = #{value}
					</when>
					<when test="opt == '시설이름'">
						and A.ACCOMMO_NAME like '%' || #{value} || '%'
					</when>
					<when test="opt == '내용'">
						and R.REVIEW_CONTENT like '%' || #{value} || '%'
					</when>
				</choose>
			</if>
		)
		where rn between #{beginIndex} and #{endIndex}
	</select> 
	 
	 
	 
	 
		<!--//성하민 호스트페이지 메인에서 최근 3일 리뷰건수 가져오기
		int getRecentReviewCountByAccommoNo(int no);
		-->
	 <select id="getRecentReviewCountByAccommoNo" parameterType="int" resultType="int">
		select count(*)
		from TB_FINAL_ACCOMMO_REVIEWS
		where review_created_date &gt;= trunc(sysdate-2)
		and accommo_no = #{no}
	</select>
	
	<!--//성하민 호스트페이지 메인에서 오늘 리뷰건수 가져오기
		int getTodayReviewCountByAccommoNo(int no);
		-->
		<select id="getTodayReviewCountByAccommoNo" parameterType="int" resultType="int">
		select count(*)
		from TB_FINAL_ACCOMMO_REVIEWS
		where review_created_date &gt;= trunc(sysdate)
		and accommo_no = #{no}
		</select>
		
	 
	 
  <!-- // 성하민 호스트페이지 메인에서 최근 3일 리뷰데이터 가져오기
  List<AdminAccommoReviewDto> getRecentReviewListByAccommoNo(Criteria criteria); 
		
	 -->
	<select id="getRecentReviewListByAccommoNo" parameterType="com.hoge.form.Criteria" resultType="com.hoge.dto.AdminAccommoReviewDto">
		select 	
			ACCOMMO_REVIEW_NO as no,
			USER_NO	as userNo,
			HOST_NO	as hostNo,
			
			ACCOMMO_NO as accommoNo,
			ACCOMMO_NAME as accommoName,
				
			REVIEW_CLEANLINESS_STAR	as cleanlinessStar,
			REVIEW_COMMUNICATION_STAR as communicationStar,
			REVIEW_ACCURACY_STAR as accuracyStar,
			REVIEW_LOCATION_STAR as locationStar,
				
			REVIEW_CONTENT as content,
			REVIEW_CREATED_DATE	as createdDate,
			REVIEW_DELETED as deleted,
			REVIEW_UPDATED_DATE	as updatedDate,
				
			REVIEW_ANSWERED	as answered,
			ANSWER_CONTENT as answerContent,
			ANSWER_DELETED as answerDeleted,
			ANSWER_CREATED_DATE as answerCreatedDate
		from (
			select 	
			R.ACCOMMO_REVIEW_NO,
			R.USER_NO,
			A.HOST_NO,
			
			R.ACCOMMO_NO,
			A.ACCOMMO_NAME,
				
			R.REVIEW_CLEANLINESS_STAR,
			R.REVIEW_COMMUNICATION_STAR,
			R.REVIEW_ACCURACY_STAR,
			R.REVIEW_LOCATION_STAR,
				
			R.REVIEW_CONTENT,
			R.REVIEW_CREATED_DATE,
			R.REVIEW_DELETED,
			R.REVIEW_UPDATED_DATE,
				
			R.REVIEW_ANSWERED,
			R.ANSWER_CONTENT,
			R.ANSWER_DELETED,
			R.ANSWER_CREATED_DATE,
	 		row_number() over (order by R.REVIEW_CREATED_DATE desc) rn
		from TB_FINAL_ACCOMMO_REVIEWS R, TB_FINAL_ACCOMMODATIONS A
		where R.ACCOMMO_NO = A.ACCOMMO_NO
		and r.review_created_date &gt;= trunc(sysdate-2)
		and r.accommo_no = #{no}
		)
		where rn between #{beginIndex} and #{endIndex}
	</select> 
	 

</mapper>