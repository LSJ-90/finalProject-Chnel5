<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hoge.mapper.UserMapper">
	
	<!-- 이승준 테스트용
		List<User> getAllUsers();
	 -->
	 <select id="getAllUsers" resultType="com.hoge.vo.other.User">
	 	select
	 		user_no as no,
	 		user_id as id,
	 		user_is_host as isHost,
	 		user_name as name,
	 		user_pwd as pwd,
	 		user_email as email,
	 		user_tel as tel,
	 		user_registered_date as registeredDate,
	 		user_deleted as deleted,
	 		user_pnt as pnt,
	 		user_image as image,
	 		user_gender as gender,
	 		user_reported_count as reportedCount
	 	from
	 		tb_final_users
	 	order by
	 		user_no desc
	 </select>
	 
	 <!-- 이승준 
		User getUserById(String id);
	 -->
	 <select id="getUserById" resultType="com.hoge.vo.other.User" parameterType="string">
	 	select
	 		user_no as no,
	 		user_id as id,
	 		user_is_host as isHost,
	 		user_name as name,
	 		user_pwd as pwd,
	 		user_email as email,
	 		user_tel as tel,
	 		user_registered_date as registeredDate,
	 		user_deleted as deleted,
	 		user_pnt as pnt,
	 		user_image as image,
	 		user_gender as gender,
	 		user_reported_count as reportedCount
	 	from
	 		tb_final_users
		where 
			user_id = #{id}
	 </select>
	 
	 
	 
	 
	 <!-- 이승준 
		void insertUser();
	 -->
	 <insert id="insertUser" parameterType="com.hoge.vo.other.User">
		insert into tb_final_users
			(user_no, user_id, user_name, user_pwd, user_tel, user_email, user_gender)
		values
			(final_user_no_seq.NEXTVAL, #{id}, #{name}, #{pwd}, #{tel}, #{email}, #{gender})
	</insert>
	
	
	
	<!-- 성하민 void insertUserKaKao(User user); -->
	 <insert id="insertUserKaKao" parameterType="com.hoge.dto.KakaoUserDto">
		insert into tb_final_users
			(user_no, user_id, user_name, user_email, user_gender)
		values
			(final_user_no_seq.NEXTVAL, #{id}, #{name}, #{email}, #{gender})
	</insert>
	
	
	<!-- 이승준 
		int userCheckByid(String id);
	 -->
	<select id="userCheckByid" parameterType="string" resultType="int">
		select 
			count(*) 
		from 
			tb_final_users 
		where 
			user_id = #{id}
	</select>
	 
	 <!-- 성하민
		int getUsersTotalRows(CriteriaAdminUser CAU);
	 -->
	 <select id="getUsersTotalRows" parameterType="com.hoge.form.CriteriaAdminUser" resultType="int">
		select count(*)
		from tb_final_users
		where user_deleted = #{deleted}
			<if test="opt != null and value != null">
				<choose>
					<when test="opt == '이름'">
						and user_name like '%' || #{value} || '%'
					</when>
					<when test="opt == '전화번호'">
						and user_tel like '%' || #{value} || '%'
					</when>
					<when test="opt == '아이디'">
						and user_id like '%' || #{value} || '%'
					</when>
					<when test="opt == '이메일'">
						and user_email like '%' || #{value} || '%'
					</when>
				</choose>
			</if>
	</select>
	
	<!-- 성하민
		List<User> searchUsers(CriteriaAdminUser CAU);
	 -->
	<select id="searchUsers" parameterType="com.hoge.form.CriteriaAdminUser" resultType="com.hoge.vo.other.User">
		select 	
			user_no as no,
	 		user_id as id,
	 		user_is_host as isHost,
	 		user_name as name,
	 		user_pwd as pwd,
	 		user_email as email,
	 		user_tel as tel,
	 		user_registered_date as registeredDate,
	 		user_deleted as deleted,
	 		user_pnt as pnt,
	 		user_image as image,
	 		user_gender as gender,
	 		user_reported_count as reportedCount
		from (
			select 	
				user_no,
	 			user_id,
	 			user_is_host,
	 			user_name,
	 			user_pwd,
	 			user_email,
	 			user_tel,
	 			user_registered_date,
	 			user_deleted,
	 			user_pnt,
		 		user_image,
		 		user_gender,
	 			user_reported_count, 
	 			row_number() over (order by user_no desc) rn
			from tb_final_users
			where user_deleted = #{deleted}
			<if test="opt != null and value != null">
				<choose>
					<when test="opt == '이름'">
						and user_name like '%' || #{value} || '%'
					</when>
					<when test="opt == '전화번호'">
						and user_tel like '%' || #{value} || '%'
					</when>
					<when test="opt == '아이디'">
						and user_id like '%' || #{value} || '%'
					</when>
					<when test="opt == '이메일'">
						and user_email like '%' || #{value} || '%'
					</when>
				</choose>
			</if>		
		)
		where rn between #{beginIndex} and #{endIndex}
	</select> 
	 
</mapper>