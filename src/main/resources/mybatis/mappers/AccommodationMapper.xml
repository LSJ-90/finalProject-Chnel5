<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hoge.mapper.AccommodationMapper">
	<!-- 염주환, 이승준:검색기능 추가-->
	<select id="searchAccommoListDtos" parameterType="com.hoge.form.Criteria" resultType="com.hoge.dto.AccommoListDto">
		select *
		from
			(select
		    		row_number() over (order by a.accommo_no) rn,
					a.accommo_no as no, 
					a.host_no as hostNo, 
					a.accommo_type as type, 
					a.accommo_name as name, 
					a.average_cleanliness_star as cleanlinessStar,
					a.average_communication_star as communicationStar, 
					a.average_accuracy_star as accuracyStar, 
					a.average_location_star as locationStar,
					a.accommo_address as address, 
					a.accommo_region_depth1 as regionDepth1, 
					a.accommo_region_depth2 as regionDepth2, 
					a.accommo_region_depth3 as regionDepth3, 
					a.accommo_xce as xce, 
					a.accommo_yce as yce,
		            min(r.weekdays_price) as minWeekdaysPrice,
					max(r.weekdays_price) as maxWeekdaysPrice,
		            min(r.weekend_price) as minWeekendPrice,
					max(r.weekend_price) as maxWeekendPrice,
		            min(r.peak_season_price) as minPeakSeasonPrice,
					max(r.peak_season_price) as maxPeakSeasonPrice,
		            min(r.standard_number) as minStandardNumber,
					max(r.maximum_number) as maxStandardNumber
				from
		            tb_final_accommodations a,
		            tb_final_rooms r
		        where a.accommo_no = r.accommo_no
			    	<if test="opt1 == 'address' and addressValue != ''">
                       and a.accommo_address like '%' || #{addressValue} || '%'
                    </if>
                    <if test="opt2 == 'checkInBox' and checkInBoxValue != '' and opt3 == 'checkOutBox' and checkOutBoxValue !=''">
                       and r.room_no NOT IN (select 
                       							bk.room_no
                                        	 from 
                                        	 	tb_final_room_availability ava, tb_final_room_bookings bk
                                       		 where 
                                       		 	ava.room_booking_no = bk.room_booking_no
                                       		 and 
                                       		 	booked_date &gt;= #{checkInBoxValue}
                                        	 and 
                                        	 	booked_date &lt; #{checkOutBoxValue}
                                        	 group 
                                        	 	by bk.room_no)
                    </if>
                    <if test="opt4 == 'maxStandardNumber' and maxStandardNumberValue != ''">
                       and r.maximum_number &gt;= to_number(#{maxStandardNumberValue})
                    </if>
		        group by 
		            a.accommo_no, a.host_no, a.accommo_type, a.accommo_name, a.average_cleanliness_star, a.average_communication_star, 
		            a.average_accuracy_star, a.average_location_star, a.accommo_region_depth1, a.accommo_region_depth2, 
		            a.accommo_region_depth3, a.accommo_xce, a.accommo_yce,a.accommo_address)
		where rn between #{beginIndex} and #{endIndex}
	</select>
	
	<!-- 염주환(검색 기능 추가 해야함) -->
	<select id="getAccommodationsTotalRows" parameterType="com.hoge.form.Criteria" resultType="int">
		select 
			count(*)
		from (select
				a.accommo_no as no
      		  from
              	tb_final_accommodations a,
              	tb_final_rooms r
              where 
              	a.accommo_no = r.accommo_no
	    	<if test="opt1 == 'address' and addressValue != ''">
              and 
               	a.accommo_address like '%' || #{addressValue} || '%'
            </if>
            <if test="opt2 == 'checkInBox' and checkInBoxValue != '' and opt3 == 'checkOutBox' and checkOutBoxValue !=''">
              and 
               	r.room_no NOT IN (select 
               							bk.room_no
                                	 from 
                                	 	tb_final_room_availability ava, tb_final_room_bookings bk
                               		 where 
                               		 	ava.room_booking_no = bk.room_booking_no
                               		 and 
                               		 	booked_date &gt;= #{checkInBoxValue}
                                	 and 
                                	 	booked_date &lt; #{checkOutBoxValue}
                                	 group 
                                	 	by bk.room_no)
            </if>
            <if test="opt4 == 'maxStandardNumber' and maxStandardNumberValue != ''">
               and 
               	r.maximum_number &gt;= to_number(#{maxStandardNumberValue})
            </if>
            group by 
		            a.accommo_no)
	</select>

	<!-- 염주환 -->
	<select id="getAccommoImagesByAccommoNo" parameterType="int" resultType="com.hoge.vo.accommo.AccommoImage">
		select
			accommo_image as image,
			accommo_no as accommoNo
		from
			tb_final_accommo_images
		where
			accommo_no = #{value}
	</select>
	
	<!-- 염주환 -->
	<select id="getAccommodationByNo" parameterType="int" resultType="com.hoge.vo.accommo.Accommodation">
		select
			accommo_no as no, 
			host_no as hostNo, 
			accommo_type as type, 
			accommo_name as name, 
			accommo_intro_title as introTitle,
			accommo_intro_content as introContent,
			accommo_web_address as webAddress,
			accommo_check_in_time as checkInTime,
			accommo_check_out_time as checkOutime,
			average_cleanliness_star as cleanlinessStar,
			average_communication_star as communicationStar, 
			average_accuracy_star as accuracyStar, 
			average_location_star as locationStar, 
			accommo_address as address,
			accommo_region_depth1 as regionDepth1, 
			accommo_region_depth2 as regionDepth2, 
			accommo_region_depth3 as regionDepth3, 
			accommo_xce as xce, 
			accommo_yce as yce,
			accommo_registered_date as registeredDate
		from
            tb_final_accommodations 
        where
        	accommo_no = #{value}
	</select>
	
	<!-- 염주환 -->
	<select id="getRoomByNo" parameterType="int" resultType="com.hoge.vo.accommo.Room">
		select
			room_no as no,
			accommo_no as accommoNo,
			room_name as name,
			weekdays_price as weekdaysPrice,
			weekend_price as weekendPrice,
			peak_season_price as peakSeasonPrice,
			standard_number as standardNumber,
			maximum_number as maximumNumber,
			price_per_person as pricePerPerson,
			room_amenity as amenity,
			room_feature as feature
		from
			tb_final_rooms
		where
			room_no = #{value}
	</select>
	
	<!-- 염주환 -->
	<select id="getReserveAccommoDto" resultType="com.hoge.dto.ReserveAccommoDto">
		select 
			a.accommo_no as no,
			a.host_no as hostNo,
			a.accommo_name as accommoName,
			r.room_no as roomNo,
			r.room_name as roomName,
			r.standard_number as standardNumber,
			r.maximum_number as maximumNumber
		from 
			tb_final_accommodations a,
			tb_final_rooms r
		where 
			a.accommo_no = r.accommo_no
			and a.accommo_no = #{accommoNo}
			and r.room_no = #{roomNo}
	</select>

	<!-- 염주환 -->
	<select id="getRoomBookingNoSeq" resultType="int">
		select final_room_booking_no_seq.nextval
		from dual
	</select>
	
	<!-- 염주환 -->
	<insert id="insertRoomBooking" parameterType="com.hoge.vo.accommo.RoomBooking">
		insert into tb_final_room_bookings
			(room_booking_no, room_no, user_no, check_in_date, check_out_date, room_booking_status, 
			room_payment, room_tax_included_price, room_used_pnt, room_paid_price, room_booking_name,
			room_booking_tel, room_extra_people, tid)
		values
			(#{no}, #{roomBooking.roomNo}, #{userNo}, #{roomBooking.checkInDate}, #{roomBooking.checkOutDate}, 1, #{roomBooking.payment}, #{roomBooking.taxIncludedPrice}, #{roomBooking.usedPnt},
			#{roomBooking.paidPrice}, #{roomBooking.roomUserName}, #{roomBooking.roomUserTel}, #{roomBooking.extraPeople}, #{tid})
	</insert>
	
	<!-- 염주환 -->
	<insert id="insertRoomAvailability">
		insert into tb_final_room_availability
			(booked_date, room_booking_no)
		values
			(#{sqlDate}, #{no})
	</insert>
	
	<!-- 염주환 -->
	<select id="getAccumulatedMoney" resultType="long">
		select accumulated_money
		from (
    		select rownum, accumulated_money
			from tb_final_transactions
        	order by transaction_no desc)
		where rownum=1
	</select>
	
	<!-- 염주환 -->
	<insert id="insertTransactions">
		<selectKey keyProperty="transactionNo" resultType="int" order="BEFORE">
			select final_transaction_no_seq.nextval
			from dual
		</selectKey>
		insert into tb_final_transactions
			(transaction_no, transaction_type, transaction_amount, room_booking_no, accumulated_money)
		values
			(#{transactionNo}, 1, #{amount}, #{no}, #{accumulated})
	</insert>
	
	<!-- 유상효 객실 등록하기 -->
	<insert id="insertRoom" parameterType="com.hoge.vo.accommo.Room">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select final_room_no_seq.nextval
			from dual
		</selectKey>
		insert into tb_final_rooms
		(
		room_no,
		accommo_no,
		room_name,
		weekdays_price,
		weekend_price,
		peak_season_price,
		standard_number,
		maximum_number,
		price_per_person,
		room_amenity,
		room_feature		
		)
		values
			(
			#{no},
			#{accommoNo},
			#{name},
			#{weekdaysPrice},
			#{weekendPrice},
			#{peakSeasonPrice},
			#{standardNumber},
			#{maximumNumber},
			#{pricePerPerson},
			#{amenity},
			#{feature}
			)
	</insert>
	
	<!-- 유상효 객실 사진 저장 -->
	<insert id="insertRoomImage" parameterType="com.hoge.vo.accommo.RoomImage">
		insert into tb_final_room_images
		(
		room_image,
		room_no
		)
		values
			(
			#{image},
			#{roomNo}
			)
	</insert>
	
	<!--  유상효 accNo로 객실리스트 가져오기 -->
	<select id="getRoomListByAccNo" parameterType="int" resultType="com.hoge.dto.RoomListDto">
		select 
			room_no as no,
			accommo_no as accommoNo,
			room_name as name,
			weekdays_price as weekdaysPrice,
			weekend_price as weekendPrice,
			peak_season_price as peakSeasonPrice,
			standard_number as standardNumber,
			maximum_number as maximumNumber,
			price_per_person as pricePerPerson,
			room_amenity as amenity,
			room_feature as feature
		from
			tb_final_rooms
		where
			accommo_no = #{value}
		order by
			room_no asc
	</select>
	
	<!--  유상효 roomNo로 객실리스트 가져오기 -->
	<select id="getRoomByRoomNo" parameterType="int" resultType="com.hoge.dto.RoomDto">
		select 
			room_no as no,
			accommo_no as accommoNo,
			room_name as name,
			weekdays_price as weekdaysPrice,
			weekend_price as weekendPrice,
			peak_season_price as peakSeasonPrice,
			standard_number as standardNumber,
			maximum_number as maximumNumber,
			price_per_person as pricePerPerson,
			room_amenity as amenity,
			room_feature as feature
		from
			tb_final_rooms
		where
			room_no = #{value}
	</select>
	
	<!-- 유상효 accNo로 객실사진 가져오기 -->
	<select id="getRoomImagesByRoomNo" parameterType="int" resultType="com.hoge.vo.accommo.RoomImage">
		select
			room_image as image,
			room_no as roomNo
		from
			tb_final_room_images
		where
			room_no = #{value}
	</select>
	
	<!-- 유상효 roomNo로 객실 수정하기 -->
	<update id="roomModify" parameterType="com.hoge.vo.accommo.Room">
		update tb_final_rooms
		set
			room_no = #{no},
			accommo_no = #{accommoNo},
			room_name = #{name},
			weekdays_price = #{weekdaysPrice},
			weekend_price = #{weekendPrice},
			peak_season_price = #{peakSeasonPrice},
			standard_number = #{standardNumber},
			maximum_number = #{maximumNumber},
			price_per_person = #{pricePerPerson},
			room_amenity = #{amenity},
			room_feature = #{feature}
		where
			room_no = #{no}
	</update>
	
	<select id="getRoomBookingByUserNO" parameterType="int" resultType="com.hoge.vo.accommo.RoomBooking">
		select 
			checkInDate,
			checkOutDate, 
			extraPeople, 
			paidPrice, 
			no,
			roomNo,
			bookingMadeDate
		from 
			(select 
				rownum, 
                check_in_date as checkInDate,
                check_out_date as checkOutDate, 
                room_extra_people as extraPeople,
                room_paid_price as paidPrice,
                room_booking_no as no,
                room_no as roomNo,
                booking_made_date as bookingMadeDate
			from 
				tb_final_room_bookings
			where 
				user_no=#{value }
			order by 
				booking_made_date desc)
		where rownum = 1
	</select>

	<update id="updateUserPnt">
		update 
			tb_final_users
		set 
			user_pnt = (select user_pnt from tb_final_users where user_no=#{userNo})-#{usedPnt}
		where user_no=#{userNo}
	</update>

	
	<!--  void updateRoomBooking(RoomBooking roomBooking);-->
	<update id="updateRoomBooking" parameterType="com.hoge.vo.accommo.RoomBooking">
		update TB_FINAL_ROOM_BOOKINGS
		set Room_booking_status =  #{status}
		where ROOM_BOOKING_NO = #{no}
	</update>
	
	
	
	<!--  성하민 체크아웃 시간 지나면서 예약상태인 예약정보 가져오기
		RoomBookingBatchDto getRoomBookingBatchDto();-->
	<select id="getRoomBookingBatchDto" resultType="com.hoge.dto.RoomBookingBatchDto">
	select b.ROOM_BOOKING_NO as roomBookingNo,
		    b.USER_NO as userNo,
		    b.CHECK_OUT_DATE as checkOutDate,
		    b.ROOM_BOOKING_STATUS as roomBookingStatus,
		    b.Room_no as roomNo,
		    b.room_tax_included_price as roomTaxIncludedPrice,
		    b.room_paid_price as roomPaidPrice,
		    a.accommo_no as accommoNo,
		    h.host_no as hostNo,
		    h.grade_name as GradeName,
		    g.commission_rate as commissionRate
		from 
			TB_FINAL_ROOM_BOOKINGS b, tb_final_hosts h, tb_final_rooms r, tb_final_accommodations a, tb_final_grades g
		WHERE b.CHECK_OUT_DATE &lt; SYSDATE
		and b.room_booking_status = 1
		and b.room_no = r.room_no
		and r.accommo_no = a.accommo_no
		and a.host_no = h.host_no
		and h.grade_name = g.grade_name
	</select>
	
	<!--  성하민 bookingNo로 RoomBooking 가져오기
		RoomBooking getRoomBookingByRoomBookingNo(int no);
	 -->
	<select id="getRoomBookingByRoomBookingNo" parameterType="int" resultType="com.hoge.vo.accommo.RoomBooking">
		select 
			ROOM_BOOKING_NO as no,
			ROOM_NO as roomNo,
			USER_NO as userNo,
			CHECK_IN_DATE as checkInDate,
			CHECK_OUT_DATE as checkOutDate,
			ROOM_BOOKING_STATUS as status,
			BOOKING_MADE_DATE as bookingMadeDate,
			ROOM_CANCELED_DATE as canceledDate,
			ROOM_CANCEL_REASON as cancelReason,
			ROOM_PAYMENT as payment,
			ROOM_TAX_INCLUDED_PRICE as taxIncludedPrice,
			ROOM_USED_PNT as usedPnt,
			ROOM_PAID_PRICE as paidPrice,
			ROOM_BOOKING_NAME as roomUserName,
			ROOM_BOOKING_TEL as roomUserTel,
			ROOM_EXTRA_PEOPLE as extraPeople,
			TID as TID
		from
			TB_FINAL_ROOM_BOOKINGS
		where
			ROOM_BOOKING_NO = #{no}
	</select>
	
</mapper>